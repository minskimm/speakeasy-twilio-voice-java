/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Long;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import org.openapis.openapi.utils.Utils;
import org.openapitools.jackson.nullable.JsonNullable;


public class ListDialingPermissionsHrsPrefixesMeta {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("first_page_url")
    private Optional<String> firstPageUrl;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("key")
    private Optional<String> key;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("next_page_url")
    private JsonNullable<String> nextPageUrl;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("page")
    private Optional<Long> page;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("page_size")
    private Optional<Long> pageSize;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("previous_page_url")
    private JsonNullable<String> previousPageUrl;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    private Optional<String> url;

    @JsonCreator
    public ListDialingPermissionsHrsPrefixesMeta(
            @JsonProperty("first_page_url") Optional<String> firstPageUrl,
            @JsonProperty("key") Optional<String> key,
            @JsonProperty("next_page_url") JsonNullable<String> nextPageUrl,
            @JsonProperty("page") Optional<Long> page,
            @JsonProperty("page_size") Optional<Long> pageSize,
            @JsonProperty("previous_page_url") JsonNullable<String> previousPageUrl,
            @JsonProperty("url") Optional<String> url) {
        Utils.checkNotNull(firstPageUrl, "firstPageUrl");
        Utils.checkNotNull(key, "key");
        Utils.checkNotNull(nextPageUrl, "nextPageUrl");
        Utils.checkNotNull(page, "page");
        Utils.checkNotNull(pageSize, "pageSize");
        Utils.checkNotNull(previousPageUrl, "previousPageUrl");
        Utils.checkNotNull(url, "url");
        this.firstPageUrl = firstPageUrl;
        this.key = key;
        this.nextPageUrl = nextPageUrl;
        this.page = page;
        this.pageSize = pageSize;
        this.previousPageUrl = previousPageUrl;
        this.url = url;
    }
    
    public ListDialingPermissionsHrsPrefixesMeta() {
        this(Optional.empty(), Optional.empty(), JsonNullable.undefined(), Optional.empty(), Optional.empty(), JsonNullable.undefined(), Optional.empty());
    }

    @JsonIgnore
    public Optional<String> firstPageUrl() {
        return firstPageUrl;
    }

    @JsonIgnore
    public Optional<String> key() {
        return key;
    }

    @JsonIgnore
    public JsonNullable<String> nextPageUrl() {
        return nextPageUrl;
    }

    @JsonIgnore
    public Optional<Long> page() {
        return page;
    }

    @JsonIgnore
    public Optional<Long> pageSize() {
        return pageSize;
    }

    @JsonIgnore
    public JsonNullable<String> previousPageUrl() {
        return previousPageUrl;
    }

    @JsonIgnore
    public Optional<String> url() {
        return url;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public ListDialingPermissionsHrsPrefixesMeta withFirstPageUrl(String firstPageUrl) {
        Utils.checkNotNull(firstPageUrl, "firstPageUrl");
        this.firstPageUrl = Optional.ofNullable(firstPageUrl);
        return this;
    }

    public ListDialingPermissionsHrsPrefixesMeta withFirstPageUrl(Optional<String> firstPageUrl) {
        Utils.checkNotNull(firstPageUrl, "firstPageUrl");
        this.firstPageUrl = firstPageUrl;
        return this;
    }

    public ListDialingPermissionsHrsPrefixesMeta withKey(String key) {
        Utils.checkNotNull(key, "key");
        this.key = Optional.ofNullable(key);
        return this;
    }

    public ListDialingPermissionsHrsPrefixesMeta withKey(Optional<String> key) {
        Utils.checkNotNull(key, "key");
        this.key = key;
        return this;
    }

    public ListDialingPermissionsHrsPrefixesMeta withNextPageUrl(String nextPageUrl) {
        Utils.checkNotNull(nextPageUrl, "nextPageUrl");
        this.nextPageUrl = JsonNullable.of(nextPageUrl);
        return this;
    }

    public ListDialingPermissionsHrsPrefixesMeta withNextPageUrl(JsonNullable<String> nextPageUrl) {
        Utils.checkNotNull(nextPageUrl, "nextPageUrl");
        this.nextPageUrl = nextPageUrl;
        return this;
    }

    public ListDialingPermissionsHrsPrefixesMeta withPage(long page) {
        Utils.checkNotNull(page, "page");
        this.page = Optional.ofNullable(page);
        return this;
    }

    public ListDialingPermissionsHrsPrefixesMeta withPage(Optional<Long> page) {
        Utils.checkNotNull(page, "page");
        this.page = page;
        return this;
    }

    public ListDialingPermissionsHrsPrefixesMeta withPageSize(long pageSize) {
        Utils.checkNotNull(pageSize, "pageSize");
        this.pageSize = Optional.ofNullable(pageSize);
        return this;
    }

    public ListDialingPermissionsHrsPrefixesMeta withPageSize(Optional<Long> pageSize) {
        Utils.checkNotNull(pageSize, "pageSize");
        this.pageSize = pageSize;
        return this;
    }

    public ListDialingPermissionsHrsPrefixesMeta withPreviousPageUrl(String previousPageUrl) {
        Utils.checkNotNull(previousPageUrl, "previousPageUrl");
        this.previousPageUrl = JsonNullable.of(previousPageUrl);
        return this;
    }

    public ListDialingPermissionsHrsPrefixesMeta withPreviousPageUrl(JsonNullable<String> previousPageUrl) {
        Utils.checkNotNull(previousPageUrl, "previousPageUrl");
        this.previousPageUrl = previousPageUrl;
        return this;
    }

    public ListDialingPermissionsHrsPrefixesMeta withUrl(String url) {
        Utils.checkNotNull(url, "url");
        this.url = Optional.ofNullable(url);
        return this;
    }

    public ListDialingPermissionsHrsPrefixesMeta withUrl(Optional<String> url) {
        Utils.checkNotNull(url, "url");
        this.url = url;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ListDialingPermissionsHrsPrefixesMeta other = (ListDialingPermissionsHrsPrefixesMeta) o;
        return 
            Objects.deepEquals(this.firstPageUrl, other.firstPageUrl) &&
            Objects.deepEquals(this.key, other.key) &&
            Objects.deepEquals(this.nextPageUrl, other.nextPageUrl) &&
            Objects.deepEquals(this.page, other.page) &&
            Objects.deepEquals(this.pageSize, other.pageSize) &&
            Objects.deepEquals(this.previousPageUrl, other.previousPageUrl) &&
            Objects.deepEquals(this.url, other.url);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            firstPageUrl,
            key,
            nextPageUrl,
            page,
            pageSize,
            previousPageUrl,
            url);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ListDialingPermissionsHrsPrefixesMeta.class,
                "firstPageUrl", firstPageUrl,
                "key", key,
                "nextPageUrl", nextPageUrl,
                "page", page,
                "pageSize", pageSize,
                "previousPageUrl", previousPageUrl,
                "url", url);
    }
    
    public final static class Builder {
 
        private Optional<String> firstPageUrl = Optional.empty();
 
        private Optional<String> key = Optional.empty();
 
        private JsonNullable<String> nextPageUrl = JsonNullable.undefined();
 
        private Optional<Long> page = Optional.empty();
 
        private Optional<Long> pageSize = Optional.empty();
 
        private JsonNullable<String> previousPageUrl = JsonNullable.undefined();
 
        private Optional<String> url = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder firstPageUrl(String firstPageUrl) {
            Utils.checkNotNull(firstPageUrl, "firstPageUrl");
            this.firstPageUrl = Optional.ofNullable(firstPageUrl);
            return this;
        }

        public Builder firstPageUrl(Optional<String> firstPageUrl) {
            Utils.checkNotNull(firstPageUrl, "firstPageUrl");
            this.firstPageUrl = firstPageUrl;
            return this;
        }

        public Builder key(String key) {
            Utils.checkNotNull(key, "key");
            this.key = Optional.ofNullable(key);
            return this;
        }

        public Builder key(Optional<String> key) {
            Utils.checkNotNull(key, "key");
            this.key = key;
            return this;
        }

        public Builder nextPageUrl(String nextPageUrl) {
            Utils.checkNotNull(nextPageUrl, "nextPageUrl");
            this.nextPageUrl = JsonNullable.of(nextPageUrl);
            return this;
        }

        public Builder nextPageUrl(JsonNullable<String> nextPageUrl) {
            Utils.checkNotNull(nextPageUrl, "nextPageUrl");
            this.nextPageUrl = nextPageUrl;
            return this;
        }

        public Builder page(long page) {
            Utils.checkNotNull(page, "page");
            this.page = Optional.ofNullable(page);
            return this;
        }

        public Builder page(Optional<Long> page) {
            Utils.checkNotNull(page, "page");
            this.page = page;
            return this;
        }

        public Builder pageSize(long pageSize) {
            Utils.checkNotNull(pageSize, "pageSize");
            this.pageSize = Optional.ofNullable(pageSize);
            return this;
        }

        public Builder pageSize(Optional<Long> pageSize) {
            Utils.checkNotNull(pageSize, "pageSize");
            this.pageSize = pageSize;
            return this;
        }

        public Builder previousPageUrl(String previousPageUrl) {
            Utils.checkNotNull(previousPageUrl, "previousPageUrl");
            this.previousPageUrl = JsonNullable.of(previousPageUrl);
            return this;
        }

        public Builder previousPageUrl(JsonNullable<String> previousPageUrl) {
            Utils.checkNotNull(previousPageUrl, "previousPageUrl");
            this.previousPageUrl = previousPageUrl;
            return this;
        }

        public Builder url(String url) {
            Utils.checkNotNull(url, "url");
            this.url = Optional.ofNullable(url);
            return this;
        }

        public Builder url(Optional<String> url) {
            Utils.checkNotNull(url, "url");
            this.url = url;
            return this;
        }
        
        public ListDialingPermissionsHrsPrefixesMeta build() {
            return new ListDialingPermissionsHrsPrefixesMeta(
                firstPageUrl,
                key,
                nextPageUrl,
                page,
                pageSize,
                previousPageUrl,
                url);
        }
    }
}

