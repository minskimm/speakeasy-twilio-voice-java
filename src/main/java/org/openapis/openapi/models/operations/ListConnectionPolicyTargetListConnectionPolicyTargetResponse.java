/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import org.openapis.openapi.models.components.VoiceV1ConnectionPolicyConnectionPolicyTarget;
import org.openapis.openapi.utils.Utils;

/**
 * ListConnectionPolicyTargetListConnectionPolicyTargetResponse - OK
 */

public class ListConnectionPolicyTargetListConnectionPolicyTargetResponse {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targets")
    private Optional<? extends List<VoiceV1ConnectionPolicyConnectionPolicyTarget>> targets;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("meta")
    private Optional<? extends ListConnectionPolicyTargetMeta> meta;

    @JsonCreator
    public ListConnectionPolicyTargetListConnectionPolicyTargetResponse(
            @JsonProperty("targets") Optional<? extends List<VoiceV1ConnectionPolicyConnectionPolicyTarget>> targets,
            @JsonProperty("meta") Optional<? extends ListConnectionPolicyTargetMeta> meta) {
        Utils.checkNotNull(targets, "targets");
        Utils.checkNotNull(meta, "meta");
        this.targets = targets;
        this.meta = meta;
    }
    
    public ListConnectionPolicyTargetListConnectionPolicyTargetResponse() {
        this(Optional.empty(), Optional.empty());
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<List<VoiceV1ConnectionPolicyConnectionPolicyTarget>> targets() {
        return (Optional<List<VoiceV1ConnectionPolicyConnectionPolicyTarget>>) targets;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<ListConnectionPolicyTargetMeta> meta() {
        return (Optional<ListConnectionPolicyTargetMeta>) meta;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public ListConnectionPolicyTargetListConnectionPolicyTargetResponse withTargets(List<VoiceV1ConnectionPolicyConnectionPolicyTarget> targets) {
        Utils.checkNotNull(targets, "targets");
        this.targets = Optional.ofNullable(targets);
        return this;
    }

    public ListConnectionPolicyTargetListConnectionPolicyTargetResponse withTargets(Optional<? extends List<VoiceV1ConnectionPolicyConnectionPolicyTarget>> targets) {
        Utils.checkNotNull(targets, "targets");
        this.targets = targets;
        return this;
    }

    public ListConnectionPolicyTargetListConnectionPolicyTargetResponse withMeta(ListConnectionPolicyTargetMeta meta) {
        Utils.checkNotNull(meta, "meta");
        this.meta = Optional.ofNullable(meta);
        return this;
    }

    public ListConnectionPolicyTargetListConnectionPolicyTargetResponse withMeta(Optional<? extends ListConnectionPolicyTargetMeta> meta) {
        Utils.checkNotNull(meta, "meta");
        this.meta = meta;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ListConnectionPolicyTargetListConnectionPolicyTargetResponse other = (ListConnectionPolicyTargetListConnectionPolicyTargetResponse) o;
        return 
            Objects.deepEquals(this.targets, other.targets) &&
            Objects.deepEquals(this.meta, other.meta);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            targets,
            meta);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ListConnectionPolicyTargetListConnectionPolicyTargetResponse.class,
                "targets", targets,
                "meta", meta);
    }
    
    public final static class Builder {
 
        private Optional<? extends List<VoiceV1ConnectionPolicyConnectionPolicyTarget>> targets = Optional.empty();
 
        private Optional<? extends ListConnectionPolicyTargetMeta> meta = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder targets(List<VoiceV1ConnectionPolicyConnectionPolicyTarget> targets) {
            Utils.checkNotNull(targets, "targets");
            this.targets = Optional.ofNullable(targets);
            return this;
        }

        public Builder targets(Optional<? extends List<VoiceV1ConnectionPolicyConnectionPolicyTarget>> targets) {
            Utils.checkNotNull(targets, "targets");
            this.targets = targets;
            return this;
        }

        public Builder meta(ListConnectionPolicyTargetMeta meta) {
            Utils.checkNotNull(meta, "meta");
            this.meta = Optional.ofNullable(meta);
            return this;
        }

        public Builder meta(Optional<? extends ListConnectionPolicyTargetMeta> meta) {
            Utils.checkNotNull(meta, "meta");
            this.meta = meta;
            return this;
        }
        
        public ListConnectionPolicyTargetListConnectionPolicyTargetResponse build() {
            return new ListConnectionPolicyTargetListConnectionPolicyTargetResponse(
                targets,
                meta);
        }
    }
}

