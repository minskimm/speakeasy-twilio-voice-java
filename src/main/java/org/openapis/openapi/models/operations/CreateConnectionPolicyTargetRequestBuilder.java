/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.lang.String;
import java.util.Optional;
import org.openapis.openapi.utils.Utils;

public class CreateConnectionPolicyTargetRequestBuilder {

    private String connectionPolicySid;
    private Optional<? extends CreateConnectionPolicyTargetCreateConnectionPolicyTargetRequest> requestBody = Optional.empty();
    private Optional<String> serverURL = Optional.empty();
    private final SDKMethodInterfaces.MethodCallCreateConnectionPolicyTarget sdk;

    public CreateConnectionPolicyTargetRequestBuilder(SDKMethodInterfaces.MethodCallCreateConnectionPolicyTarget sdk) {
        this.sdk = sdk;
    }

    public CreateConnectionPolicyTargetRequestBuilder connectionPolicySid(String connectionPolicySid) {
        Utils.checkNotNull(connectionPolicySid, "connectionPolicySid");
        this.connectionPolicySid = connectionPolicySid;
        return this;
    }
                
    public CreateConnectionPolicyTargetRequestBuilder requestBody(CreateConnectionPolicyTargetCreateConnectionPolicyTargetRequest requestBody) {
        Utils.checkNotNull(requestBody, "requestBody");
        this.requestBody = Optional.of(requestBody);
        return this;
    }

    public CreateConnectionPolicyTargetRequestBuilder requestBody(Optional<? extends CreateConnectionPolicyTargetCreateConnectionPolicyTargetRequest> requestBody) {
        Utils.checkNotNull(requestBody, "requestBody");
        this.requestBody = requestBody;
        return this;
    }
                
    public CreateConnectionPolicyTargetRequestBuilder serverURL(String serverURL) {
        Utils.checkNotNull(serverURL, "serverURL");
        this.serverURL = Optional.of(serverURL);
        return this;
    }

    public CreateConnectionPolicyTargetRequestBuilder serverURL(Optional<String> serverURL) {
        Utils.checkNotNull(serverURL, "serverURL");
        this.serverURL = serverURL;
        return this;
    }

    public CreateConnectionPolicyTargetResponse call() throws Exception {

        return sdk.createConnectionPolicyTarget(
            connectionPolicySid,
            requestBody,
            serverURL);
    }
}
