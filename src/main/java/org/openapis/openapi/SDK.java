/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package org.openapis.openapi;

import java.lang.String;
import java.util.Map;
import java.util.Optional;
import java.util.function.Consumer;
import org.openapis.openapi.utils.HTTPClient;
import org.openapis.openapi.utils.RetryConfig;
import org.openapis.openapi.utils.SpeakeasyHTTPClient;
import org.openapis.openapi.utils.Utils;

/**
 * Twilio - Voice: This is the public Twilio REST API.
 */
public class SDK {


    /**
     * SERVERS contains the list of server urls available to the SDK.
     */
    public static final String[] SERVERS = {
        "https://voice.twilio.com",
    };

    private final VoiceV1ArchivedCall voiceV1ArchivedCall;

    private final VoiceV1ByocTrunk voiceV1ByocTrunk;

    private final VoiceV1ConnectionPolicy voiceV1ConnectionPolicy;

    private final VoiceV1ConnectionPolicyTarget voiceV1ConnectionPolicyTarget;

    private final VoiceV1Country voiceV1Country;

    private final VoiceV1BulkCountryUpdate voiceV1BulkCountryUpdate;

    private final VoiceV1HighriskSpecialPrefix voiceV1HighriskSpecialPrefix;

    private final VoiceV1Settings voiceV1Settings;

    private final VoiceV1IpRecord voiceV1IpRecord;

    private final VoiceV1SourceIpMapping voiceV1SourceIpMapping;

    public VoiceV1ArchivedCall voiceV1ArchivedCall() {
        return voiceV1ArchivedCall;
    }

    public VoiceV1ByocTrunk voiceV1ByocTrunk() {
        return voiceV1ByocTrunk;
    }

    public VoiceV1ConnectionPolicy voiceV1ConnectionPolicy() {
        return voiceV1ConnectionPolicy;
    }

    public VoiceV1ConnectionPolicyTarget voiceV1ConnectionPolicyTarget() {
        return voiceV1ConnectionPolicyTarget;
    }

    public VoiceV1Country voiceV1Country() {
        return voiceV1Country;
    }

    public VoiceV1BulkCountryUpdate voiceV1BulkCountryUpdate() {
        return voiceV1BulkCountryUpdate;
    }

    public VoiceV1HighriskSpecialPrefix voiceV1HighriskSpecialPrefix() {
        return voiceV1HighriskSpecialPrefix;
    }

    public VoiceV1Settings voiceV1Settings() {
        return voiceV1Settings;
    }

    public VoiceV1IpRecord voiceV1IpRecord() {
        return voiceV1IpRecord;
    }

    public VoiceV1SourceIpMapping voiceV1SourceIpMapping() {
        return voiceV1SourceIpMapping;
    }

    private final SDKConfiguration sdkConfiguration;

    /**
     * The Builder class allows the configuration of a new instance of the SDK.
     */
    public static class Builder {

        private final SDKConfiguration sdkConfiguration = new SDKConfiguration();

        private Builder() {
        }

        /**
         * Allows the default HTTP client to be overridden with a custom implementation.
         *
         * @param client The HTTP client to use for all requests.
         * @return The builder instance.
         */
        public Builder client(HTTPClient client) {
            this.sdkConfiguration.defaultClient = client;
            return this;
        }
        
        /**
         * Configures the SDK to use the provided security details.
         *
         * @param security The security details to use for all requests.
         * @return The builder instance.
         */
        public Builder security(org.openapis.openapi.models.components.Security security) {
            this.sdkConfiguration.securitySource = SecuritySource.of(security);
            return this;
        }

        /**
         * Configures the SDK to use a custom security source.
         * @param securitySource The security source to use for all requests.
         * @return The builder instance.
         */
        public Builder securitySource(SecuritySource securitySource) {
            this.sdkConfiguration.securitySource = securitySource;
            return this;
        }
        
        /**
         * Overrides the default server URL.
         *
         * @param serverUrl The server URL to use for all requests.
         * @return The builder instance.
         */
        public Builder serverURL(String serverUrl) {
            this.sdkConfiguration.serverUrl = serverUrl;
            return this;
        }

        /**
         * Overrides the default server URL  with a templated URL populated with the provided parameters.
         *
         * @param serverUrl The server URL to use for all requests.
         * @param params The parameters to use when templating the URL.
         * @return The builder instance.
         */
        public Builder serverURL(String serverUrl, Map<String, String> params) {
            this.sdkConfiguration.serverUrl = Utils.templateUrl(serverUrl, params);
            return this;
        }
        
        /**
         * Overrides the default server by index.
         *
         * @param serverIdx The server to use for all requests.
         * @return The builder instance.
         */
        public Builder serverIndex(int serverIdx) {
            this.sdkConfiguration.serverIdx = serverIdx;
            this.sdkConfiguration.serverUrl = SERVERS[serverIdx];
            return this;
        }
        
        /**
         * Overrides the default configuration for retries
         *
         * @param retryConfig The retry configuration to use for all requests.
         * @return The builder instance.
         */
        public Builder retryConfig(RetryConfig retryConfig) {
            this.sdkConfiguration.retryConfig = Optional.of(retryConfig);
            return this;
        }
        // Visible for testing, may be accessed via reflection in tests
        Builder _hooks(org.openapis.openapi.utils.Hooks hooks) {
            sdkConfiguration.setHooks(hooks);  
            return this;  
        }
        
        // Visible for testing, may be accessed via reflection in tests
        Builder _hooks(Consumer<? super org.openapis.openapi.utils.Hooks> consumer) {
            consumer.accept(sdkConfiguration.hooks());
            return this;    
        }
        
        /**
         * Builds a new instance of the SDK.
         * @return The SDK instance.
         */
        public SDK build() {
            if (sdkConfiguration.defaultClient == null) {
                sdkConfiguration.defaultClient = new SpeakeasyHTTPClient();
            }
	        if (sdkConfiguration.securitySource == null) {
	    	    sdkConfiguration.securitySource = SecuritySource.of(null);
	        }
            if (sdkConfiguration.serverUrl == null || sdkConfiguration.serverUrl.isBlank()) {
                sdkConfiguration.serverUrl = SERVERS[0];
                sdkConfiguration.serverIdx = 0;
            }
            if (sdkConfiguration.serverUrl.endsWith("/")) {
                sdkConfiguration.serverUrl = sdkConfiguration.serverUrl.substring(0, sdkConfiguration.serverUrl.length() - 1);
            }
            return new SDK(sdkConfiguration);
        }
    }
    
    /**
     * Get a new instance of the SDK builder to configure a new instance of the SDK.
     * @return The SDK builder instance.
     */
    public static Builder builder() {
        return new Builder();
    }

    private SDK(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.voiceV1ArchivedCall = new VoiceV1ArchivedCall(sdkConfiguration);
        this.voiceV1ByocTrunk = new VoiceV1ByocTrunk(sdkConfiguration);
        this.voiceV1ConnectionPolicy = new VoiceV1ConnectionPolicy(sdkConfiguration);
        this.voiceV1ConnectionPolicyTarget = new VoiceV1ConnectionPolicyTarget(sdkConfiguration);
        this.voiceV1Country = new VoiceV1Country(sdkConfiguration);
        this.voiceV1BulkCountryUpdate = new VoiceV1BulkCountryUpdate(sdkConfiguration);
        this.voiceV1HighriskSpecialPrefix = new VoiceV1HighriskSpecialPrefix(sdkConfiguration);
        this.voiceV1Settings = new VoiceV1Settings(sdkConfiguration);
        this.voiceV1IpRecord = new VoiceV1IpRecord(sdkConfiguration);
        this.voiceV1SourceIpMapping = new VoiceV1SourceIpMapping(sdkConfiguration);
        this.sdkConfiguration.initialize();
    }}
